stages:
  - build
  #  - test

variables:
  MAVEN_OPTS: >-
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
  APP_NAME: "helloword-cicd by David"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository
    - target

# This will only validate and compile stuff and run e.g. maven-enforcer-plugin.
# Because some enforcer rules might check dependency convergence and class duplications
# we use `test-compile` here instead of `validate`, so the correct classpath is picked up.
.validate:
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS test-compile'

image: maven:latest

build_job:
  stage: build
  script:
    - "mvn install"
    - echo "Maven compile started"
    - "mvn compile"


#test-job1:
#  stage: test
#  script:
#    - echo "This job tests something"
#
#test-job2:
#  stage: test
#  script:
#    - echo "This job tests something, but takes more time than test-job1."
#    - echo "After each echo commands complete, it runs the command for 20 seconds"
#    - echo "which simulates a test that runs 20 seconds longer than test-job1"
#    - sleep 20