#image: docker.ktc.local/runner/maven-runner:3.9.2-JDK17

image: maven:3.9.5-amazoncorretto-17

variables:
  MAVEN_OPTS: >-
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
  APP_NAME: "YOUR_PROJECT'S_NAME"

stages:
  - build
  - test
  - code analysis
  - application analysis

cache:
  paths:
    - .m2/repository
    - target

Build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean package -DskipTests

Unit Test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS clean package test
#  artifacts:
#    when: always
#    reports:
#      junit:
#        - target/surefire-reports/TEST-*.xml

Veracode-SCA:
  stage: code analysis
  script:
    - curl -sSL https://download.sourceclear.com/ci.sh | sh

Veracode-SAST:
  stage: application analysis
  artifacts:
    name: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}_pipeline-results
    paths:
      - results.json
      - veracode_gitlab_vulnerabilities.json
    reports:
     sast: veracode_gitlab_vulnerabilities.json
    expire_in: 1 week
    when: always
  before_script: sudo apt install zip
  script:
    - zip -r helloworld-cicd.zip .
    - curl -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - unzip pipeline-scan-LATEST.zip pipeline-scan.jar
    - java -jar pipeline-scan.jar
      --veracode_api_id "$VERACODE_API_KEY_ID"
      --veracode_api_key "$VERACODE_API_KEY_SECRET"
      --file helloworld-cicd.zip
      --request_policy $VERACODE_POLICY_ID
      --app_id "$VERACODE_APP_ID"
      --policy_name "$VERACODE_POLICY_ID"
      --fail_on_severity Medium
      --fail_on_cwe Medium
      --project_name "${CI_PROJECT_PATH}"
      --project_url "${CI_REPOSITORY_URL}"
      --project_ref "${CI_COMMIT_REF_NAME}"
      --gl_issue_generation true
      --gl_vulnerability_generation true
      GITLAB_URL=https://gitlab.ktc.local/api/v4/projects